name: Deploy and Containerize

env:
  py: "3.11"

on:
  release:
    types: [created]

jobs:
  
  Deploy:

    runs-on: ubuntu-latest

    steps:
        
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.py }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          pip install twine
          
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{secrets.PYPI_TOKEN}}
        run: |
          hatch build
          twine upload dist/*


  Containerize:

    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
    
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐳 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷 Get metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/metator
          tags: |
            ${{ github.ref }}
            type=raw,value=py-${{ env.py }}
            type=raw,value=latest

      - name: 🚀 Build and push package in local Docker image
        id: docker
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            PKG_VERSION=${{ github.ref_name }}
            PY_VERSION=${{ env.py }}

