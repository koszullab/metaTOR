[build-system]
requires = ["hatchling", "hatch-build-scripts"]
build-backend = "hatchling.build"

[project]
name = "metator"
version = "1.3.4"
description = "A pipeline for binning metagenomic datasets from metaHiC data."
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = { text = "GNU General Public License v3 (GPLv3)" }

authors = [
    {name = "Amaury Bignaud", email = "amaury.bignaud@pasteur.fr"}, 
    {name = "Jacques Serizay", email = "jacques.serizay@pasteur.fr"},
]
keywords = [
    "metagenomics",
    "bioinformatics"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Operating System :: Unix",
]
dependencies = [
    "hicstuff",
    "networkx",
    "checkv",
    "biopython",
    "pysam",
    "pairtools",
    "pyfastx",
    "cooler",
    "numpy",
    "pandas",
    "scikit-learn",
    "scipy",
    "seaborn",
    "looseversion",
    "micomplete",
    "pypairix"

    # NON PIP DEPENDENCIES
    #"bowtie2"
    #"bwa"
    #"samtools"
    #"prodigal"
    #"hmmer"
    #"openjdk"
]

[project.optional-dependencies]
test = [
    "coverage[toml]",
    "isort",
    "pytest",
    "pytest-cov",
    "pytest-pylint",
    "pytest-order",
    "codecov",
    "pylint",
    "ruff",
]
docs = [
    'autodoc',
    'sphinx-autoapi',
    "autodocsumm",
    "sphinxcontrib-napoleon",
    "m2r",
    "recommonmark",
    "Sphinx>=1.6",
    "sphinx-autobuild",
    "sphinx-click",
    "furo",
    "pydata-sphinx-theme",
    "sphinx-rtd-theme",
    "myst-parser",
    "nbsphinx",
    "lxml[html_clean]",
]
dev = [
    "metator[test,docs]",
    "hatch",
    "hatchling", 
    "hatch-build-scripts", 
    "pre-commit",
    "mypy",
    "black",
    "twine",
    "ipython"
]

[project.urls]
homepage = "https://github.com/koszullab/metator"
documentation = "https://github.com/koszullab/metator"
repository = "https://github.com/koszullab/metator"
changelog = "https://github.com/koszullab/metator/blob/devel/CHANGELOG.md"

[project.scripts]
metator = "metator.main:main"

[tool.hatch.version]
path = "src/metator/version.py"

[tool.hatch.metadata]
allow-direct-references = true

[[tool.hatch.build.hooks.build-scripts.scripts]]
out_dir = "external/artifacts/"
work_dir = "external"
commands = ["bash setup_dependencies.sh"]
artifacts = []

[tool.hatch.build.force-include]
"external/artifacts" = "metator/external/artifacts"

[tool.black]
line-length = 130
target-version = ['py310']

[tool.ruff]
line-length = 130
src = ["src"]
exclude = [
    "bench/*",
    ".venv",
    "__main__.py",
]
lint.ignore = ["E402", "I001"]
lint.extend-select = [
    "B",  # bugbear
    "E",  # style errors
    "F",  # pyflakes
    "I",  # isort
    "RUF", # ruff-specific rules
    # "UP", # pyupgrade
    "W",  # style  warnings
]
lint.isort.known-first-party = ["metator"]

[tool.pytest.ini_options]
markers = ["order: mark test to run in a specific order"]
minversion = "7"
log_cli_level = "INFO"
xfail_strict = true
addopts = [
    "-ra",
    "--strict-config",
    "--strict-markers",
    "--cov=metator",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
filterwarnings = ["ignore::PendingDeprecationWarning"]
testpaths = ["tests"]

[tool.coverage.run]
source = ["src/metator"]

omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "return NotImplemented",
    "raise NotImplementedError"
]
